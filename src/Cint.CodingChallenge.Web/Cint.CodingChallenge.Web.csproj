<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <MpaRoot>app\</MpaRoot>
  </PropertyGroup>

  <ItemGroup>
    <Compile Remove="Models\**" />
    <Content Remove="Models\**" />
    <EmbeddedResource Remove="Models\**" />
    <None Remove="Models\**" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="app\src\css\site.css" />
    <Content Include="app\webpack.config.js" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Cint.CodingChallenge.Data\Cint.CodingChallenge.Data.csproj" />
  </ItemGroup>

  <ItemGroup>
	<InternalsVisibleTo Include="Cint.CodingChallenge.Web.Test" />	
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Htmx" Version="1.6.0" />
    <PackageReference Include="Htmx.TagHelpers" Version="1.6.0" />
    <PackageReference Include="Swashbuckle.AspNetCore.SwaggerGen" Version="6.5.0" />
    <PackageReference Include="Swashbuckle.AspNetCore.SwaggerUI" Version="6.5.0" />
  </ItemGroup>


  <!--
      1. Install npm packages
      "Inputs" and "Outputs" are used for incremental builds. If all output items are up-to-date, MSBuild skips the target.
      The first time the task is executed. Then, it only runs when you change the package.json file.
      Documentation: https://learn.microsoft.com/en-us/visualstudio/msbuild/incremental-builds?WT.mc_id=DT-MVP-5003978
   -->
  <Target Name="NpmInstall" Inputs="$(MpaRoot)package.json" Outputs="$(MpaRoot)node_modules/.install-stamp">
    <!--
        Use npm install or npm ci depending on RestorePackagesWithLockFile value.
        Uncomment the following lines if you want to use this feature:

        <PropertyGroup>
          <RestorePackagesWithLockFile>true</RestorePackagesWithLockFile>
        </PropertyGroup>
     -->
    <Exec WorkingDirectory="$(MpaRoot)" Command="npm ci" Condition="'$(RestorePackagesWithLockFile)' == 'true'" />
    <Exec WorkingDirectory="$(MpaRoot)" Command="npm install" Condition="'$(RestorePackagesWithLockFile)' != 'true'" />

    <!-- Write the stamp file, so incremental builds work -->
    <Touch Files="$(MpaRoot)node_modules/.install-stamp" AlwaysCreate="true" />
  </Target>

  <!--
      2. Run npm run build before building the .NET project.
      MSBuild runs NpmInstall before this task because of the DependsOnTargets attribute.
   -->
  <Target Name="NpmRunBuild" DependsOnTargets="NpmInstall" BeforeTargets="BeforeBuild">
    <Exec WorkingDirectory="$(MpaRoot)" Command="npm run build" />
  </Target>

</Project>
